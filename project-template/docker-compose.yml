version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: compliance_flow
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev123
      POSTGRES_MULTIPLE_DATABASES: user_service,declaration_service,form_service,rule_engine_service,review_service,case_service,notification_service,analytics_service
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-databases.sh:/docker-entrypoint-initdb.d/init-databases.sh
    networks:
      - compliance-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - compliance-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - compliance-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - compliance-network

  # Microservices
  user-service:
    build: ./services/user-service
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://dev:dev123@postgres:5432/user_service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./services/user-service:/app
    networks:
      - compliance-network

  declaration-service:
    build: ./services/declaration-service
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://dev:dev123@postgres:5432/declaration_service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - USER_SERVICE_URL=http://user-service:8000
      - FORM_SERVICE_URL=http://form-service:8000
    depends_on:
      - postgres
      - redis
      - kafka
      - user-service
    volumes:
      - ./services/declaration-service:/app
    networks:
      - compliance-network

  form-service:
    build: ./services/form-service
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://dev:dev123@postgres:5432/form_service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - USER_SERVICE_URL=http://user-service:8000
    depends_on:
      - postgres
      - redis
      - kafka
      - user-service
    volumes:
      - ./services/form-service:/app
    networks:
      - compliance-network

  rule-engine-service:
    build: ./services/rule-engine-service
    ports:
      - "8004:8000"
    environment:
      - DATABASE_URL=postgresql://dev:dev123@postgres:5432/rule_engine_service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - DECLARATION_SERVICE_URL=http://declaration-service:8000
    depends_on:
      - postgres
      - redis
      - kafka
      - declaration-service
    volumes:
      - ./services/rule-engine-service:/app
    networks:
      - compliance-network

  review-service:
    build: ./services/review-service
    ports:
      - "8005:8000"
    environment:
      - DATABASE_URL=postgresql://dev:dev123@postgres:5432/review_service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - DECLARATION_SERVICE_URL=http://declaration-service:8000
      - USER_SERVICE_URL=http://user-service:8000
    depends_on:
      - postgres
      - redis
      - kafka
      - declaration-service
      - user-service
    volumes:
      - ./services/review-service:/app
    networks:
      - compliance-network

  case-service:
    build: ./services/case-service
    ports:
      - "8006:8000"
    environment:
      - DATABASE_URL=postgresql://dev:dev123@postgres:5432/case_service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - DECLARATION_SERVICE_URL=http://declaration-service:8000
      - USER_SERVICE_URL=http://user-service:8000
    depends_on:
      - postgres
      - redis
      - kafka
      - declaration-service
      - user-service
    volumes:
      - ./services/case-service:/app
    networks:
      - compliance-network

  notification-service:
    build: ./services/notification-service
    ports:
      - "8007:8000"
    environment:
      - DATABASE_URL=postgresql://dev:dev123@postgres:5432/notification_service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./services/notification-service:/app
    networks:
      - compliance-network

  analytics-service:
    build: ./services/analytics-service
    ports:
      - "8008:8000"
    environment:
      - DATABASE_URL=postgresql://dev:dev123@postgres:5432/analytics_service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./services/analytics-service:/app
    networks:
      - compliance-network

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - compliance-network

  # API Gateway
  api-gateway:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - user-service
      - declaration-service
      - form-service
      - rule-engine-service
      - review-service
      - case-service
      - notification-service
      - analytics-service
    networks:
      - compliance-network

volumes:
  postgres_data:
  redis_data:
  kafka_data:

networks:
  compliance-network:
    driver: bridge

